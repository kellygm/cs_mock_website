// Author: Reed Kilday

let tips = ["Never forget to implement proper authentication and authorization mechanisms to protect your web application's APIs from unauthorized access and potential security threats.", "Be conscious of using the appropriate HTTP methods (GET, POST, PUT, DELETE) for the intended operations. Using the wrong method can lead to unintended consequences and security vulnerabilities.", "Never forget to validate and sanitize user inputs on both the client and server sides. Input validation is crucial for preventing security vulnerabilities such as SQL injection and cross-site scripting (XSS).", "Don't overlook performance optimization. Regularly review and optimize your code, database queries, and assets to ensure your web application runs efficiently and provides a smooth user experience.", "Always remember to update your project's dependencies regularly. Outdated libraries may have security vulnerabilities that could be exploited. Use package managers to simplify the process.", "Never forget to test your web application across various browsers and devices to ensure a consistent and reliable user experience for all users.", "Always use version control systems like Git to track changes in your codebase. This helps you collaborate with other developers, revert to previous versions if needed, and maintain a clean and organized code history.", "Don't forget to make your web applications accessible to users with disabilities. Follow accessibility best practices, such as providing alternative text for images and ensuring keyboard navigation, to make your site inclusive.", "Never forget to document your code thoroughly. Well-written documentation helps you and other developers understand the codebase, making maintenance, debugging, and collaboration much smoother.", "Always keep scalability in mind when designing and developing your web applications. Consider potential future growth and plan for scalability to handle increased traffic and data volumes.", "Prioritize code readability. Write clean and understandable code to make collaboration and maintenance easier.", "Use meaningful variable and function names. It enhances code clarity and makes your codebase more maintainable.", "Implement proper error handling. Anticipate and handle errors gracefully to improve the user experience and aid debugging.", "Regularly back up your code. Utilize version control and cloud repositories to ensure you have a backup of your work.", "Follow the DRY (Don't Repeat Yourself) principle. Refactor repetitive code into functions or modules to improve maintainability.", "Stay up-to-date with industry trends. Follow blogs, forums, and conferences to keep abreast of the latest technologies and best practices.", "Consider security at every stage of development. Conduct security audits and stay informed about common vulnerabilities.", "Optimize images and other assets. Compress images and use efficient file formats to reduce page load times.", "Practice pair programming. Collaborating with others can lead to better solutions and skill development.", "Keep your development environment clean. Regularly remove unused dependencies and files to maintain efficiency."]

let tip = document.getElementById("tip");

duck = document.getElementById('duck');
duck.addEventListener('click', () => {
    tip.textContent = tips[Math.floor(Math.random() * tips.length)];
}
);
